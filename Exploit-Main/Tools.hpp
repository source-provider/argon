#include <iostream>
#include <tlhelp32.h>
#include <Psapi.h>
#include <Windows.h>
#include <functional>
#include <string>
#include <thread>
#include <vector>
#include <mutex>
#include <direct.h>
#include <ShlObj_core.h>
#include <Wininet.h>
#include <filesystem>
#include <ctime>
#pragma comment(lib, "wininet.lib")


namespace Tools
{
	static std::string replace_all(std::string subject, const std::string& search,
		const std::string& replace)
	{
		size_t pos = 0;
		while ((pos = subject.find(search, pos)) != std::string::npos)
		{
			subject.replace(pos, search.length(), replace);
			pos += replace.length();
		}
		return subject;
	}


	static std::string download_string(std::string URL)
	{
		HINTERNET interwebs = InternetOpenA("Mozilla/5.0", INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, NULL);
		HINTERNET urlFile;
		std::string rtn;
		if (interwebs)
		{
			urlFile = InternetOpenUrlA(interwebs, URL.c_str(), NULL, NULL, NULL, NULL);
			if (urlFile)
			{
				char buffer[2000];
				DWORD bytesRead;
				do
				{
					InternetReadFile(urlFile, buffer, 2000, &bytesRead);
					rtn.append(buffer, bytesRead);
					memset(buffer, 0, 2000);
				} while (bytesRead);
				InternetCloseHandle(interwebs);
				InternetCloseHandle(urlFile);
				std::string p = replace_all(rtn, "|n", "\r\n");
				return p;
			}
		}
		InternetCloseHandle(interwebs);
		std::string p = replace_all(rtn, "|n", "\r\n");
		return p;
	}
}